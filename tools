import requests, time, re, argparse
from unidecode import unidecode

WIKI_API = "https://vi.wiktionary.org/w/api.php"
CATEGORY = "Thể_loại:Động_từ_tiếng_Việt"

def norm(w: str) -> str:
    w = (w or "").strip()
    if ":" in w:  # bỏ namespace
        return ""
    s = unidecode(w.lower())
    s = re.sub(r"[^a-z0-9\s]", " ", s)
    s = re.sub(r"\s+", " ", s).strip()
    return s

def fetch_all_verbs():
    members, cmcontinue = [], None
    while True:
        params = {
            "action": "query",
            "list": "categorymembers",
            "cmtitle": CATEGORY,
            "cmlimit": "500",
            "format": "json",
        }
        if cmcontinue: params["cmcontinue"] = cmcontinue
        r = requests.get(WIKI_API, params=params, timeout=30)
        r.raise_for_status()
        data = r.json()
        for it in data.get("query", {}).get("categorymembers", []):
            title = it.get("title", "")
            if title: members.append(title)
        cmcontinue = data.get("continue", {}).get("cmcontinue")
        if not cmcontinue: break
        time.sleep(0.2)
    return members

def main(out_path="verbs_vi.txt", limit=1000):
    print("Đang tải động từ…")
    titles = fetch_all_verbs()
    vocab = set()
    for t in titles:
        w = norm(t)
        if not w: continue
        if " " in w or len(w) < 2: continue
        vocab.add(w)
    lst = sorted(vocab)
    if limit and limit > 0:
        lst = lst[:limit]
    with open(out_path, "w", encoding="utf-8") as f:
        for w in lst: f.write(w + "\n")
    print(f"✅ Đã ghi {len(lst)} động từ vào {out_path}")

if __name__ == "__main__":
    ap = argparse.ArgumentParser()
    ap.add_argument("--out", default="verbs_vi.txt")
    ap.add_argument("--limit", type=int, default=1000)
    args = ap.parse_args()
    main(args.out, args.limit)
